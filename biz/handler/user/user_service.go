// Code generated by hertz generator.

package user

import (
	"context"

	user "github.com/T4t4KAU/webx/biz/model/user"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// Register .
// @router /user/register [POST]
func Register(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.UserRegisterReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(user.UserRegisterResp)

	c.JSON(consts.StatusOK, resp)
}

// Login .
// @router /user/login [POST]
func Login(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.UserLoginReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(user.UserLoginResp)

	c.JSON(consts.StatusOK, resp)
}

// Profile .
// @router /user/profile [POST]
func Profile(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.UserProfileReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(user.UserProfileResp)

	c.JSON(consts.StatusOK, resp)
}

// Edit .
// @router /user/edit [POST]
func Edit(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.UserEditReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(user.UserEditResp)

	c.JSON(consts.StatusOK, resp)
}
